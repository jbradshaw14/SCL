FUNCTION_BLOCK "Password" : Void

VAR_INPUT
  PasswordIN : STRING;
  BackdoorIN : INT;
  RTC : DTL;
END_VAR

VAR_OUTPUT

END_VAR

VAR_IN_OUT
  PasswordIN : STRING;
  PasswordStored : STRING;
END_VAR

VAR
  PasswordIsCorrect : BOOL;
  PasswordTimer : TON_TIME;
  NewPassword : STRING;
  ChangePassword : BOOL;
  ForgotPassword : BOOL;
  NewPasswordIsDone : BOOL;
  Logout : BOOL;
  LockoutTime : "udt_TIME";
END_VAR

VAR_TEMP
  BackdoorPassword : TIME;
END_VAR

VAR CONSTANT
  HOUR : DINT := 3600000;
  MINUTE : DINT := 60000;
  SECOND : DINT := 1000;
END_VAR

"BackdoorPassword"(Year := #RTC.YEAR,
                   Month := #RTC.MONTH,
                   Day := #RTC.DAY,
                   Backdoor => #BackdoorPassword);

IF #PasswordIN = #PasswordStored OR #BackdoorIN = #BackdoorPassword AND NOT #Logout
 THEN
    #PasswordIsCorrect := (TRUE OR #PasswordIsCorrect) AND NOT #PasswordTimer.Q AND NOT #Logout;
END_IF;

#PasswordTimer(IN := #PasswordIsCorrect,
                  PT := T#60m); // adjust after commissioning

#LockoutTime.milliSeconds := TIME_TO_DINT(#PasswordTimer.PT - #PasswordTimer.ET);
#LockoutTime.Hours := #LockoutTime.milliSeconds / #HOUR;
#LockoutTime.Minutes := #LockoutTime.milliSeconds MOD #HOUR / #MINUTE;
#LockoutTime.Seconds := #LockoutTime.milliSeconds MOD #MINUTE / #SECOND;

IF #PasswordIsCorrect THEN
  #PasswordIN := '';
END_IF;

IF #PasswordIsCorrect AND #ChangePassword AND #NewPasswordIsDone THEN
    #PasswordStored := #NewPassword;
    #ChangePassword := FALSE;
    #ForgotPassword := FALSE;
    #NewPasswordIsDone := FALSE;
END_IF;

IF #Logout THEN
  #PasswordIsCorrect := FALSE;
  #ChangePassword := FALSE;
  #PasswordIN := '';
  #Logout = FALSE;
END_IF;



