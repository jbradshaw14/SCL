// Define Function
FUNCTION "Alarm_Logic" : Void

// Setpoints from CONFIG DB
VAR_INPUT
    alarmON : BOOL;
    procVal : REAL;
    Config  : "AnalogInput_cfg";
END_VAR

VAR_OUTPUT.
    AlarmWordOut : WORD; // bit 0:hw 1:ha 2:hasd 3:lw 4:la 5:lasd
END_VAR

VAR_IN_OUT
    ALTONH : TON_TIME;
    ALTONL : TON_TIME;
    SDTONH : TON_TIME;
    SDTONL : TON_TIME;
END_VAR

VAR_TEMP
    Alarms : ARRAY [0..15] OF BOOL;
END_VAR

VAR CONSTANT

END_VAR

// High Warning Logic
IF #procVal > #Config.HighAlarmSP AND #alarmON AND #Config.HighAlarmPT <> T#0ms
THEN
    #Alarms[0] := TRUE;
ELSE
    #Alarms[0] := FALSE;
END_IF;

// High Alarm Timer Logic
#ALTONH(IN := #Alarms[0],
        PT := #Config.HighAlarmPT);
#Alarms[1] := #ALTONH.Q;

// High Alarm Shutdown
IF (#Config.HighAlarmSdPT <> T#0ms)
THEN
    #SDTONH(IN := #Alarms[1],
            PT := #Config.HighAlarmSdPT);
    #Alarms[2] := #SDTONH.Q;
ELSE
    #Alarms[2] := FALSE;
END_IF;

// Low Warning Logic
IF #procVal < #Config.LowAlarmSP AND #alarmON AND #Config.LowAlarmPT <> T#0ms
THEN
    #Alarms[3] := TRUE;
ELSE
    #Alarms[3] := FALSE;
END_IF;

// Low Alarm Timer
#ALTONL(IN := #Alarms[3],
        PT := #Config.LowAlarmPT);
#Alarms[4] := #ALTONL.Q;

// Low Alarm Shutdown
IF (#Config.LowAlarmSdPT <> T#0ms)
THEN
    #SDTONL(IN := #Alarms[4],
            PT := #Config.LowAlarmSdPT);
    #Alarms[5] := #SDTONL.Q;
ELSE
    #Alarms[5] := FALSE;
END_IF;

GATHER(IN := #Alarms,
       OUT => #AlarmWord);
